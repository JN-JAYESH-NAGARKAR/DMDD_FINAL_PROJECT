declare
    x number;
    
begin
    dbms_output.put_line('Question number A. INSERT THE DEPARTMENT IF NAME DOESNT EXISTS');
    dbms_output.put_line('Query : my_package.dept_upsert(Abcde,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('Abcde','TX', x);
end;
/
select * from department;
/

declare
    x number;
    
begin
    dbms_output.put_line('Question number B. UPDATE THE DEPARTMENT LOCATION IF NAME EXISTS');
    dbms_output.put_line('Query : my_package.dept_upsert(Rsearch,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('Research','TX', x);
end;
/

select * from department;
/

declare
    x number;
    
begin
    dbms_output.put_line('Question number C. RAISE ERROR IF THE DEPARTNEMT NAME IS INVALID (NULL, ZERO LENGTH)');
    dbms_output.put_line('Query : my_package.dept_upsert( ,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('','TX', x);
end;
/

declare
    x number;
    
begin
    dbms_output.put_line('Question number D. RAISE ERROR IF THE DEPARTMENT NAME IS A NUMBER)');
    dbms_output.put_line('Query : my_package.dept_upsert(34242,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('34242','TX', x);
end;
/

declare
    x number;
    
begin
    dbms_output.put_line('Qustion number E. ACCEPTED LOCATIONS SHOULD BE AS BELOW 
        MA, TX, IL, CA, NY, NJ, NH, RH ');
    dbms_output.put_line('Querry: my_package.dept_upsert(aCC,AZ, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('aCC','AZ', x);
end;
/
declare
    x number;
    
begin
    dbms_output.put_line('Question number F. RETURN THE DEPARTMENT NUMBER IF ITS NEWLY CREATED/ADDED');
    dbms_output.put_line('Entered Querry : my_package.dept_upsert(adfaf,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('adfaf','TX', x);
    dbms_output.put_line('THE Returned DEPARTMENT NUMBER : ' || x);
end;
/

declare
    x number;
    
begin
    dbms_output.put_line('Question number G. DEPARTMENT NUMBER SHOULD BE AUTO GENERATED');
    dbms_output.put_line('Entered Querry : my_package.dept_upsert(aCC,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('aCC','TX', x);
    dbms_output.put_line('AUTOGENERATED DEPARTMENT NUMBER : ' || x);
end;
/

declare
    x number;
    
begin
    dbms_output.put_line('Question number H. LENGTH OF THE DEPARTNEMT NAME CANNOT BE MORE THAN 20 CHARS');
    dbms_output.put_line('Entered Querry : my_package.dept_upsert(aCJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJC,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('aCJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJC','TX', x);
   
end;
/

declare
    x number;
    
begin
    dbms_output.put_line('Question number I. WHILE INSERTING THE DEPARTMENT CONVERT EVERY THING TO CAMEL CASE');
    dbms_output.put_line('Entered Querry : my_package.dept_upsert(marKETING,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('marKETING','TX', x);
    
end;
/
select * from department;

declare
    x number;
    
begin
    dbms_output.put_line('Question number J. MAKE SURE DEPARTMENT NAME IS UNIQUE');
    dbms_output.put_line('Entered Querry : my_package.dept_upsert(Accounting,TX, x);');
    dbms_output.put_line('OUTPUT');
    my_package.dept_upsert('Accounting','MA', x);
   
end;
/
select * from department;



